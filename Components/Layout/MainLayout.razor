@inherits LayoutComponentBase

<MudThemeProvider Theme="@_theme" IsDarkMode="_isDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
  <MudAppBar Class="d-flex rounded-pill border-4 mt-6 mx-auto" Style="width: 95%;" Elevation="0" Gutters Fixed="false">
    <MudLink Class="flex-grow-1 ml-1 pl-20" Style="text-align: center;" Color="Color.Default" Typo="Typo.h2"
      Underline="Underline.None" Href="/">
      ingr<span style="color: var(--mud-palette-primary);">EZ</span>
    </MudLink>
    <MudMenu Class="mr-6" Icon="@Icons.Material.Filled.AccountCircle" Color="Color.Secondary" AriaLabel="Open user menu"
      Size="Size.Large" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopRight">
      <MudMenuItem>Log In</MudMenuItem>
      <MudMenuItem>Sign Up</MudMenuItem>
      <MudMenuItem Href="/new">New</MudMenuItem>
    </MudMenu>
  </MudAppBar>
  <MudMainContent class="pt-10">
    @Body
  </MudMainContent>
</MudLayout>


<div id="blazor-error-ui">
  An unhandled error has occurred.
  <a href="" class="reload">Reload</a>
  <a class="dismiss">🗙</a>
</div>

@code {
  private bool _drawerOpen = false;
  private bool _isDarkMode = false;
  private MudTheme? _theme = null;
  private Typography _typography = new()
    {
      H2 = new()
      {
        FontFamily = new[] { "Fugaz One", "Helvetica", "Arial", "sans-serif" },
      },
      H4 = new()
      {
        FontFamily = new[] { "Fugaz One", "Helvetica", "Arial", "sans-serif" },

      },
      Default = new()
      {
        FontFamily = new[] { "Work Sans", "Helvetica", "Arial", "sans-serif" }
      }
    };
  private LayoutProperties _layout = new()
    {
      AppbarHeight = "90px",
    };

  protected override void OnInitialized()
  {
    base.OnInitialized();

    _theme = new()
      {
        PaletteLight = _lightPalette,
        PaletteDark = _darkPalette,
        LayoutProperties = _layout,
        Typography = _typography,
      };
  }


  private void DrawerToggle()
  {
    _drawerOpen = !_drawerOpen;
  }

  private void DarkModeToggle()
  {
    _isDarkMode = !_isDarkMode;
  }

  private readonly PaletteLight _lightPalette = new()
    {
      Primary = "#00a700",
      Secondary = "#a700a7",
      Tertiary = "#0000a7",
      Black = "#110e2d",
      AppbarText = "#424242",
      AppbarBackground = "rgba(255,255,255,0.8)",
      DrawerBackground = "#ffffff",
      GrayLight = "#e8e8e8",
      GrayLighter = "#f9f9f9",
      ActionDisabledBackground = "#e8e8e8",
      ActionDefault = "#00a700",
    };

  private readonly PaletteDark _darkPalette = new()
    {
      Primary = "#7e6fff",
      Surface = "#1e1e2d",
      Background = "#1a1a27",
      BackgroundGray = "#151521",
      AppbarText = "#92929f",
      AppbarBackground = "rgba(26,26,39,0.8)",
      DrawerBackground = "#1a1a27",
      ActionDefault = "#74718e",
      ActionDisabled = "#9999994d",
      ActionDisabledBackground = "#605f6d4d",
      TextPrimary = "#b2b0bf",
      TextSecondary = "#92929f",
      TextDisabled = "#ffffff33",
      DrawerIcon = "#92929f",
      DrawerText = "#92929f",
      GrayLight = "#2a2833",
      GrayLighter = "#1e1e2d",
      Info = "#4a86ff",
      Success = "#3dcb6c",
      Warning = "#ffb545",
      Error = "#ff3f5f",
      LinesDefault = "#33323e",
      TableLines = "#33323e",
      Divider = "#292838",
      OverlayLight = "#1e1e2d80",
    };

  public string DarkLightModeButtonIcon => _isDarkMode switch
  {
    true => @Icons.Material.Outlined.LightMode,
    false => Icons.Material.Filled.DarkMode,
  };
}
