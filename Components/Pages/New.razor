@page "/new"

@using FluentValidation.Results

@inject IConfiguration config

<PageTitle>New Recipe</PageTitle>

@* Sections *@
<MudContainer Class="pb-20">
  <NavTabs Selected="Tab.New" />
</MudContainer>

@* New Recipe Section *@
<MudContainer>
  <MudForm Class="d-flex align-center" Model="@recipe" @ref="@form" Validation="@(recipe.validator.ValidateValue)">
    <MudGrid Justify="Justify.SpaceEvenly">
      <MudItem Class="mb-10" xs="5">
        <MudPaper Class="pa-2 border-2" Elevation="0">
          <MudText Typo="Typo.h4" Align="Align.Center">What are you<MudText Typo="Typo.h4" Color="Color.Primary" Inline>
              feeling?</MudText>
          </MudText>
        </MudPaper>
      </MudItem>

      <MudItem xs="4">
        <MudPaper Class="pa-2" Elevation="0">
          <MudChipSet T="Meal" SelectedValues="@recipe.Meals" SelectedValuesChanged="recipe.AddMeals"
            Variant="Variant.Text" SelectionMode="SelectionMode.MultiSelection" Color="Color.Primary">
            @foreach (var meal in Enum.GetValues<Meal>())
            {
              <MudChip Class="mr-5" Value="@meal" />
            }
          </MudChipSet>
          <MudText style="font-weight: 600" Color="Color.Error">@recipe.MealError</MudText>
        </MudPaper>
      </MudItem>

      <MudFlexBreak />

      <MudItem Class=" mb-10" xs="5">
        <MudPaper Class="pa-2 border-2" Elevation="0">
          <MudText Typo="Typo.h4" Align="Align.Center">What's in the<MudText Typo="Typo.h4" Color="Color.Primary"
              Inline>
              fridge?</MudText>
          </MudText>
        </MudPaper>
      </MudItem>

      <MudItem xs="4">
        <MudPaper Class="pa-2" Elevation="0">
          <MudAutocomplete T="string" Placeholder="Add your ingredients" Value="null"
            ValueChanged="recipe.AddIngredient" SearchFunc="@ingredientSearch!.SearchIngredients" ShowProgressIndicator
            AdornmentIcon="@Icons.Material.Outlined.Search" />
          <MudText style="font-weight: 600" Color="Color.Error">@recipe.IngredientError</MudText>
        </MudPaper>
      </MudItem>

      <MudFlexBreak />

      <MudItem xs=" 5">
        <MudPaper Class="pa-2 border-2" MinHeight="220px" Elevation="0">
          <MudText Typo="Typo.h6" GutterBottom Align="Align.Center" Style="font-weight: bold;">Added Ingredients
          </MudText>
          @if (recipe.Ingredients.Count == 0)
          {
            <MudContainer Class="px-10 ">
              <MudSkeleton SkeletonType="SkeletonType.Text" Width="100%" />
              <MudSkeleton SkeletonType="SkeletonType.Text" Width="100%" />
              <MudSkeleton SkeletonType="SkeletonType.Text" Width="100%" />
            </MudContainer>
          }
          else
            @foreach (var item in recipe.Ingredients)
            {
              <MudChip T="string" Value="@item" OnClose="recipe.RemoveIngredient" />
            }
        </MudPaper>
      </MudItem>
      <MudItem xs="4" />

      <MudFlexBreak />

      <MudItem xs="6" Class="pt-15" Style="text-align: center;">
        <MudButton Variant="Variant.Filled" DropShadow="false" StartIcon="@Icons.Material.TwoTone.Restaurant"
          Size="Size.Large" Color="Color.Primary" OnClick="() => Submit()">
          Find Recipes
        </MudButton>
      </MudItem>
    </MudGrid>
  </MudForm>
</MudContainer>

@code {
  MudForm? form;
  IngredientSearch? ingredientSearch;

  RecipeBuilder recipe = new();

  private async Task Submit()
  {
    var result = await recipe.validator.ValidateAsync(recipe);

    if (!result.IsValid)
    {
      recipe.MealError = result.Errors.FirstOrDefault<ValidationFailure>(e => e.PropertyName == "Meals")?.ErrorMessage;
      recipe.IngredientError = result.Errors.FirstOrDefault<ValidationFailure>(e => e.PropertyName ==
      "Ingredients")?.ErrorMessage;
    }
    else
    {
      foreach (var m in recipe.Meals)
      {
        Console.WriteLine(m);
      }
      foreach (var i in recipe.Ingredients)
      {
        Console.WriteLine(i);
      }

    }
  }

  protected override void OnInitialized()
  {
    ingredientSearch = new(config["Algolia:ApplicationId"], config["Algolia:SearchApiKey"]);
  }
}
